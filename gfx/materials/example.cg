#include "shadow.cg"
#include "filters.cg"
#include "common.cg"

struct VIn
{
	float4 p : POSITION;
	float3 n : NORMAL;
	float2 uv : TEXCOORD0;
};

struct VOut
{
	float4 p : POSITION;
	float4 uv : TEXCOORD0;
	float3 wp : TEXCOORD1;
	float3 n : TEXCOORD2;
};

struct PIn
{
	float4 uv : TEXCOORD0;
	float3 wp : TEXCOORD1;
	float3 n : TEXCOORD2;
};


VOut main_vs(VIn IN,
	uniform float4x4 wMat,
	uniform float4x4 wvpMat
	)
{
	VOut OUT;
	OUT.wp.xyz = mul(wMat, IN.p).xyz;
	OUT.p = mul(wvpMat, IN.p);

	OUT.uv.xy = IN.uv.xy;
	OUT.uv.zw = OUT.p.zw;

	OUT.n.xyz = IN.n;

	return OUT;
}

void main_ps(
	PIn IN,
	uniform float3 camPos,
	
	uniform sampler2D diffuseMap : register(s0),
	
	out float4 color0 : COLOR0,
	out float4 color1 : COLOR1,
	out float4 color2 : COLOR2,
	out float4 color3 : COLOR3
	)
{
	float4 diffuseTex = tex2D(diffuseMap, IN.uv.xy);
	
	color0 = diffuseTex;
	
	float3 camDir = IN.wp.xyz - camPos;
	float dist = length(camDir);
	
	color1 = float4(0, 0, 0, 0);
	color2 = float4(0, 0, 0, 1);
	color3 = float4(1 - IN.uv.z / IN.uv.w, dist, 0, 1);
}
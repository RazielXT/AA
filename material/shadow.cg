#define shTex 512
#define shFil 5

float shadowSmooth(sampler2D shadowMap, float4 shadowMapPos, float blur, float texRes)
{
	shadowMapPos = shadowMapPos / shadowMapPos.w;
	float4 vTexCoord = float4(shadowMapPos.xy, 1, 1);
	float fShadowTerm = 0.0f;
	float fLightDepth = shadowMapPos.z;
	float iSqrtSamples = shFil;


	float fRadius = (iSqrtSamples - 1.0f) / 2;
	for (float y = -fRadius; y <= fRadius; y++)
	{
		for (float x = -fRadius; x <= fRadius; x++)
		{
			float2 vOffset = 0;
			vOffset = float2(x, y);
			vOffset /= texRes;
			float2 vSamplePoint = vTexCoord.xy + vOffset;
			float fDepth = tex2Dlod(shadowMap, float4(vSamplePoint, 1, 1)).x + blur;
			float fSample = (fLightDepth <= fDepth);

			// Edge tap smoothing
			float xWeight = 1;
			float yWeight = 1;

			if (x == -fRadius)
				xWeight = 1 - frac(vTexCoord.x * texRes);
			else if (x == fRadius)
				xWeight = frac(vTexCoord.x *texRes);

			if (y == -fRadius)
				yWeight = 1 - frac(vTexCoord.y * texRes);
			else if (y == fRadius)
				yWeight = frac(vTexCoord.y *texRes);

			if (vSamplePoint.x > 1 || vSamplePoint.x < 0 ||
				vSamplePoint.y>1 || vSamplePoint.y < 0)
				fSample = 1;

			fShadowTerm += fSample * xWeight * yWeight;
		}
	}

	fShadowTerm /= ((iSqrtSamples - 1) * (iSqrtSamples - 1));


	//fShadowTerm=((tex2Dlod(shadowMap, float4(shadowMapPos.xy,0,0))).x+blur >= shadowMapPos.z) ? 1.0f : 0.0f;
	//return fShadowTerm;

	return fShadowTerm;
}

float getPssmShadow(float surfaceNormalDot, float depth, sampler2D shadowMap0, float4 shadowMapPos0, sampler2D shadowMap1, float4 shadowMapPos1, sampler2D shadowMap2, float4 shadowMapPos2, sampler2D shadowMap3, float4 shadowMapPos3)
{
	float norm = surfaceNormalDot;
	float shadowing = 1.0f;
	
	if (norm < 0)
		shadowing = 0;
	else
	{
		float adder = 1;

		if (norm < 0.5)
			adder += (0.5 - norm) * shFil*5;

		if (depth <= 12)                                                                     
		{
			shadowing = shadowSmooth(shadowMap0, shadowMapPos0, 0.0000015*adder, shTex);
		}
		else if (depth <= 30)
		{
			shadowing = shadowSmooth(shadowMap1, shadowMapPos1, 0.000000235*adder, shTex);
		}
		else if (depth <= 120)
		{
			shadowing = shadowSmooth(shadowMap2, shadowMapPos2, 0.00000037*adder, shTex);
		}
		else if (depth <= 600)
		{
			shadowing = shadowSmooth(shadowMap3, shadowMapPos3, 0.00000032, shTex);
		}

		if (norm < 0.5)
			shadowing *= norm * 2;
	}
	
	return shadowing;
}